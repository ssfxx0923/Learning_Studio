{
  "nodes": [
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/audio.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2272,
        1408
      ],
      "id": "77adac8b-cc9c-4a5a-a632-02bf5314b107",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.fish.audio/v1/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "s1"
            },
            {
              "name": "Accept",
              "value": "audio/mpeg"
            },
            {
              "name": "Authorization",
              "value": "Bearer bc3c9c4104974d28bbd8ee0600d25fbd"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "= {{ $json.output.Body }}"
            },
            {
              "name": "format",
              "value": "mp3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1856,
        1408
      ],
      "id": "addf11f9-49fe-4c68-bb19-80d0ad5cd887",
      "name": "语音生成"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://open.bigmodel.cn/api/paas/v4/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 02c67b1b817747ec8cf94cce25bad339.rnRLhNg7slZOwT4K"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "cogView-4-250304"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output.cover }}"
            },
            {
              "name": "size",
              "value": "1792x1024"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1856,
        1008
      ],
      "id": "38402479-d032-4cc1-878e-d18f2c6b909f",
      "name": "图片生成"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.message }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=你是一个英语学习辅助助手。用户会输入若干英文单词，请写一篇约 100 词的有趣英文短文，兼顾流畅度和单词使用量。\n你只需要返回纯粹的json。格式，不要附带任何解释和说明。\njson格式如下:\n{\"Title\": \"California\", \"Body\": \"Your English essay related to the keyword\", \"Words\": [\"word1\", \"word2\", \"word3\"]}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        912,
        1184
      ],
      "id": "88160b11-79c7-4d27-9458-bbf3977ca1bc",
      "name": "AI Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "glm-4.5",
          "mode": "list",
          "cachedResultName": "glm-4.5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        912,
        1392
      ],
      "id": "5beec038-f645-4c34-9a2d-f114453c37e6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "yK0fgk8FcJgoqsnQ",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\"Title\": \"California\", \"Body\": \"Your English essay related to the keyword\", \"Words\": [\"word1\", \"word2\", \"word3\"]}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1056,
        1392
      ],
      "id": "e6dff279-43dc-477b-b29c-50b89d24c50c",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://open.bigmodel.cn/api/paas/v4/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 02c67b1b817747ec8cf94cce25bad339.rnRLhNg7slZOwT4K"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "cogView-4-250304"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output.middle }}"
            },
            {
              "name": "size",
              "value": "1792x1024"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1888,
        768
      ],
      "id": "2d2c18a7-f487-45df-b90d-54044e5122da",
      "name": "图片生成1"
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2096,
        768
      ],
      "id": "db343286-67ca-41a9-8fe0-4d36b66bc0d1",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2064,
        1008
      ],
      "id": "1985db6c-27c1-437a-995a-7943cff1d64b",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/middle.png",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2304,
        768
      ],
      "id": "23dc665a-91b9-49f0-9dec-5ede1b798809",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/cover.png",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2288,
        1008
      ],
      "id": "4f686ea1-2c44-4edd-961f-c91d4b09ec84",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "content": "# 使用AI，实现单词到短文的生成。\n\n# 执行这个url会生成两张图片和一份音频，用于搭建阅读模板",
        "height": 1696,
        "width": 2720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        176,
        432
      ],
      "typeVersion": 1,
      "id": "8986e9cb-2add-4855-bfb4-9da7a804b351",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "english/generate",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        640,
        1184
      ],
      "id": "722f654e-22d9-44bc-815f-974ee5ffdbc2",
      "name": "Webhook",
      "webhookId": "e155b53a-e6bc-4d80-a7ac-b4ec8d525119"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/content.json",
        "dataPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2288,
        1216
      ],
      "id": "1c2a5211-3b2e-4d96-9edc-e8de038f008a",
      "name": "Read/Write Files from Disk3"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1856,
        1216
      ],
      "id": "7d6f9738-b906-4040-8e74-2c0bb8599025",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "english/translate",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        416,
        2224
      ],
      "id": "b91ddef0-8e9c-4039-ba37-8637d1f42404",
      "name": "Webhook_Translate",
      "webhookId": "6a373184-55f7-42fb-978d-dc92de20223f"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.word }}",
        "options": {
          "systemMessage": "你是一个专业的英语翻译助手。请将用户提供的英文文本翻译成简洁、准确的中文。只返回翻译结果，不要添加任何解释。"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        752,
        2224
      ],
      "id": "b7d84275-dd5d-4800-b038-5d69f33cfbbb",
      "name": "AI Agent1",
      "retryOnFail": true,
      "waitBetweenTries": 100
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        752,
        2416
      ],
      "id": "8f8873be-4dcb-4bac-9fb3-74f9ef0b5b24",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# 划词翻译",
        "height": 560,
        "width": 1616
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        176,
        2160
      ],
      "typeVersion": 1,
      "id": "95c12c1a-4520-4377-804a-4eebcb19573f",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "english/analyze",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        416,
        2896
      ],
      "id": "dd1f998f-bc45-4104-8eb4-a20d42bd49be",
      "name": "Webhook_Analyze",
      "webhookId": "8f9e3d21-4c85-44ff-b256-9a8e7f8d6c3e"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.text }}",
        "options": {
          "systemMessage": "你是一个专业的英语教学助手。请分析用户提供的英文文本，包括：\n1. 语法结构分析\n2. 重点词汇解释\n3. 句子含义和用法\n4. 相关例句（如适用）\n请用简洁、易懂的中文回答，帮助学习者更好地理解这段文本。"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        768,
        2896
      ],
      "id": "5e95affa-519a-41b5-bfb8-730f71c5f45d",
      "name": "AI Agent2",
      "retryOnFail": true,
      "waitBetweenTries": 100
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        768,
        3088
      ],
      "id": "4fb3edbe-e8d4-422c-80a3-f55faa2ed536",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# 划词解析\n",
        "height": 560,
        "width": 1616
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        176,
        2768
      ],
      "typeVersion": 1,
      "id": "f5899a43-b2ef-4444-97c1-5053c8b3075a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=你是一个专业的ai绘图师，你的任务就是深入理解用户提供的短文。为其生专业的ai绘画提示词。对应一篇文章，你要描述两个图片。\n1.封面图(cover)：阅读整篇文章根据文章内容，描绘一幅紧扣文章主题的封面图。\n2.中间图(middle)：另外选择一个最有趣画面进行描述，生成一个中间配图。\n你需要返回严格的单行json。格式，不要附带任何解释和说明。json格式如下:\n{\"cover\": \"California\", \"middle\": \"California\"}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1456,
        848
      ],
      "id": "342b99dc-edb1-43b2-90f0-317c9ad52e06",
      "name": "AI Agent3",
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1456,
        1056
      ],
      "id": "ebd67288-fb02-4c3e-bb51-5adb329de547",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"cover\": \"California\",\n\t\"middle\": \"California\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1600,
        1056
      ],
      "id": "3a523ebb-6d08-4df7-935e-5826d4932d17",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        1168,
        3696
      ],
      "id": "2c44d7bb-08cb-43a7-9c30-92e7bc1c59f5",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1328,
        3744
      ],
      "id": "7cf2ab21-b160-4e5f-babd-6e0c15f181fd",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\"title\": \"The title of the plan or project, summarizing its main theme.\", \"description\": \"A brief description of the plan’s goal or purpose.\", \"priority\": \"The overall priority level of the plan (higher number means higher importance).\", \"tasks\": [{\"id\": \"A unique identifier for the task, used to distinguish it from others.\", \"title\": \"The title of the task, summarizing what needs to be done.\", \"priority\": \"The task's priority level (higher number means more important).\", \"completed\": \"Boolean value indicating whether the task is completed (true or false).\", \"dueDate\": \"The due date for the task, used for scheduling or reminders.\", \"createdAt\": \"The timestamp when the task was created.\", \"completedAt\": \"The timestamp when the task was completed; only present if completed.\"}], \"progress\": \"The overall progress percentage of the plan, usually based on completed tasks.\", \"dueDate\": \"The final deadline for the entire plan or project.\", \"createdAt\": \"The timestamp when the plan was created.\"}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1552,
        3744
      ],
      "id": "23426c88-3203-4443-a014-c15e886eeb7a",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "content": "## 任务规划\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 704,
        "width": 2160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        176,
        3344
      ],
      "typeVersion": 1,
      "id": "00e0b12d-b420-487a-aa46-ce3e43dfd0b5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "plan/analyze",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        496,
        3424
      ],
      "id": "08ebea3b-ffdd-4844-9847-077aff51df68",
      "name": "Webhook_plan",
      "webhookId": "8a9e5f2c-1d3b-4e8a-9c7d-6f5e4d3c2b1a",
      "retryOnFail": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.planId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        816,
        3696
      ],
      "id": "6c536f70-3207-4a57-aa53-b3f4b96e9f50",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        1440,
        3744
      ],
      "id": "7cd94f20-6359-4570-b5bf-2a2dc2825f66",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "toolDescription": "数据发送",
        "method": "POST",
        "url": "http://localhost:3002/api/plans/ai-create",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', ``, 'json') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        992,
        3696
      ],
      "id": "2cd5d8bc-f657-4120-999e-e9b9525bfb2b",
      "name": "发送数据"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        656,
        3696
      ],
      "id": "4b83dff7-7dfd-440a-a4e6-9ef94ac450ef",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "计划创建助手",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "你是一个json助手，用户会想你描述他的计划，你的任务是根据用户的计划创建一个对应的json文件。\n1. 请确保你的返回为纯粹的当行json格式，不要附带任何说明。\n2. 你可以使用时间工具查看当前时间。\n3. 不要创建过期的任务\n4. 确保使用中文\n5. 请合理运用优先级一班设置为3，紧急为5，时间宽松为1\njson格式说明：\n{\"title\": \"The title of the plan or project, summarizing its main theme.\", \"description\": \"A brief description of the plan’s goal or purpose.\", \"priority\": \"The overall priority level of the plan (higher number means higher importance).\", \"tasks\": [{\"id\": \"A unique identifier for the task, used to distinguish it from others.\", \"title\": \"The title of the task, summarizing what needs to be done.\", \"priority\": \"The task's priority level (higher number means more important).\", \"completed\": \"Boolean value indicating whether the task is completed (true or false).\", \"dueDate\": \"The due date for the task, used for scheduling or reminders.\", \"createdAt\": \"The timestamp when the task was created.\", \"completedAt\": \"The timestamp when the task was completed; only present if completed.\"}], \"progress\": \"The overall progress percentage of the plan, usually based on completed tasks.\", \"dueDate\": \"The final deadline for the entire plan or project.\", \"createdAt\": \"The timestamp when the plan was created.\"}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1328,
        3568
      ],
      "id": "f714fac1-6a10-426d-9aae-acbc68c5b18f",
      "name": "AI Agent Tool"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.plan }}{{ $json.body.userMessage }}",
        "options": {
          "systemMessage": "你是一个学时和经验都极其丰富的时间管理助手。用户会提供一个学习计划的JSON数据，包含了用户的计划。请你分析用户计划并且给出相应的建议。\n1. 你可以使用时间工具查看当前时间。\n2. 每一次分析计划都需要调用时间工具分析\n2. 你可以使用创建计划工具帮助用户创建一个计划，使用时请描述清楚计划相关信息，和计划紧急程度（一遍，宽裕，紧急）。\n3. 每一次计划创建完成后调用数据发送工具发送json数据。\n4. 为确保回复速度当用户没有要求你创建计划时不要调用计划创建工具."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        832,
        3424
      ],
      "id": "c53c4384-efef-44bc-ab49-c9a7b4d0a517",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.sessionId }}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        624,
        4432
      ],
      "id": "a9501987-0b5d-4e99-9f63-92c144bc6cfb",
      "name": "Mental Health Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.userMessage }}",
        "options": {
          "systemMessage": "你是一位温暖、专业、富有同理心的AI心理咨询助手。你的角色是倾听用户的情感困扰，提供情感支持和建议。\n\n你的职责：\n1. 积极倾听：认真理解用户的感受，不要急于给出建议\n2. 同理心回应：表达对用户感受的理解和共情\n3. 提供支持：给予温暖的鼓励和情感支持\n4. 建议引导：在适当的时候，提供合理的建议和应对策略\n5. 积极态度：保持乐观但不敷衍，真诚但不夸张\n\n注意事项：\n- 使用温和、关怀的语气\n- 避免使用过于专业的术语\n- 不要做出诊断或替代专业治疗\n- 如果用户表现出严重心理问题（如自杀倾向），建议寻求专业帮助\n- 保持对话的连贯性，记住之前的对话内容\n\n请用中文回复用户的问题。"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        528,
        4224
      ],
      "id": "fe782810-0fb0-429b-816e-cf3b290767d1",
      "name": "AI Agent5",
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        528,
        4432
      ],
      "id": "2cbdaa08-2339-4c5b-b5b9-0884daf0d6f8",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## 心理咨询\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 640,
        "width": 960
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        192,
        4096
      ],
      "typeVersion": 1,
      "id": "300f4434-5170-46d8-b58f-71da9b3d0d41",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.firstMessage }}",
        "options": {
          "systemMessage": "你是一个标题生成助手。根据用户的第一条消息，生成一个简短、准确的会话标题（5-10个汉字）。\n\n要求：\n1. 标题要简洁明了，概括用户的核心问题或情感状态\n2. 只返回标题文本，不要添加任何解释、引号或标点符号\n3. 使用中文\n4. 长度控制在5-10个汉字\n\n示例：\n输入：我最近工作压力很大，经常失眠\n输出：工作压力与失眠\n\n输入：和朋友吵架了，不知道该怎么办\n输出：朋友关系问题\n\n输入：考试焦虑，总是担心考不好\n输出：考试焦虑困扰"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        528,
        4848
      ],
      "id": "72407d26-188e-4c64-8372-5e67aae14771",
      "name": "AI Agent6",
      "retryOnFail": true,
      "waitBetweenTries": 100
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        528,
        5040
      ],
      "id": "bf79bd27-2a57-4d6f-8e13-a7c8ecf7b731",
      "name": "OpenAI Chat Model7",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## 标题生成\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 496,
        "width": 896
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        4768
      ],
      "typeVersion": 1,
      "id": "029c8e12-0f7a-46b6-b695-8c34d598bd03",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "mental-health/session/generate-title",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        272,
        4848
      ],
      "id": "604fd7cd-53db-4ff9-b0dc-45aee1061d6f",
      "name": "心理健康标题生成",
      "webhookId": "75c97db2-05f1-4a8f-b799-45e63207df9f"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "mental-health/chat",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        304,
        4224
      ],
      "id": "3b3a5e32-0196-494f-9267-58307b43ac31",
      "name": "心里咨询",
      "webhookId": "47bed156-3310-4eb9-a1ff-e9996079466c"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "你是 Learning Studio 的智能笔记补全助手。用户正在编写学习笔记（Markdown 格式），你需要根据光标前后的上下文智能预测用户接下来要写的内容。\n\n# 核心要求\n1. **只补全，不重复**：只返回接下来要写的文本，不要重复已有内容\n2. **简短精准**：补全 1-3 句话或 3-5 行代码\n3. **保持一致性**：\n   - 语言：中文学习笔记用中文，代码注释跟随原语言\n   - 风格：正式/随笔风格与上下文一致\n   - 格式：列表继续列表，代码保持缩进\n\n# 学习场景优化\n- **代码笔记**：补全代码逻辑 + 简洁注释\n- **概念笔记**：补全定义、特点、示例\n- **列表笔记**：补全相关条目（技术栈、要点等）\n- **问答笔记**：补全答案或相关问题\n- **TODO 列表**：补全常见学习任务\n\n# 输出规则\n- 直接返回补全文本，无引号、无前缀、无解释\n- 代码块必须保持正确的缩进和语法\n- 如果上下文不足（< 5 字符）或无法预测，返回空字符串\n- 避免生成过于宽泛或无关的内容\n\n# 示例\n\n**示例 1 - React Hooks 学习笔记**\n上下文：\n```\n# React Hooks 学习\n\n今天学习了以下 Hooks：\n- useState - 状态管理\n- useEffect - 副作用处理\n-\n```\n补全：\n```\n useContext - 上下文共享\n- useReducer - 复杂状态逻辑\n- useMemo - 性能优化\n```\n\n**示例 2 - 函数代码**\n上下文：\n```javascript\nfunction calculateTotal(items) {\n  return items.reduce((sum, item) => \n```\n补全：\n```javascript\nsum + item.price, 0)\n}\n```\n\n**示例 3 - 学习计划**\n上下文：\n```\n## 本周学习计划\n- [ ] 完成 React 教程\n- [ ] \n```\n补全：\n```\n学习 TypeScript 基础\n- [ ] 实战项目：Todo App\n```\n\n**示例 4 - 技术概念**\n上下文：\n```\n### 闭包 (Closure)\n\n定义：函数可以访问其外部作用域的变量\n\n特点：\n```\n补全：\n```\n1. 延长变量生命周期\n2. 创建私有变量\n3. 常用于数据封装和模块化\n```\n\n请根据用户提供的上下文进行智能补全："
        },
        "promptType": "define",
        "text": "={{ $json.body.context }}"
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        512,
        5376
      ],
      "id": "f34daae9-82ec-4f7f-a826-5730cf2cccb3",
      "name": "AI Agent7"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "id"
        },
        "options": {
          "temperature": 0.4,
          "maxTokens": 200
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        512,
        5536
      ],
      "id": "3f7bafe6-6a67-4884-a5a0-aa7a4e705c5d",
      "name": "OpenAI Chat Model8",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "path": "note/autocomplete",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        },
        "httpMethod": "POST",
        "responseMode": "lastNode"
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        240,
        5376
      ],
      "id": "3dd23173-8aa9-423b-ac76-5b898a9a508e",
      "name": "笔记自动补全 Webhook",
      "webhookId": "ed2bcb20-dbe8-4b22-a7cb-c9cce83860f9"
    },
    {
      "parameters": {
        "content": "## 笔记自动补全 (Note Autocomplete)\n\n**功能**：基于上下文的智能学习笔记补全\n**模型**：GPT-4.1-nano (快速 + 低成本)\n**参数**：temperature=0.4, maxTokens=200\n**触发**：前端 800ms 防抖后自动请求\n\n**优化点**：\n- 针对学习场景优化 prompt\n- 支持代码、列表、概念等多种笔记格式\n- 简短精准的补全（1-3 句话或 3-5 行代码）",
        "height": 432,
        "width": 848
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        192,
        5280
      ],
      "typeVersion": 1,
      "id": "c70162f7-8472-4065-9519-452526818799",
      "name": "Sticky Note6"
    }
  ],
  "connections": {
    "语音生成": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "图片生成": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "语音生成",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "图片生成1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook_Translate": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook_Analyze": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "图片生成1",
            "type": "main",
            "index": 0
          },
          {
            "node": "图片生成",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Webhook_plan": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "发送数据": {
      "ai_tool": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mental Health Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "心理健康标题生成": {
      "main": [
        [
          {
            "node": "AI Agent6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "心里咨询": {
      "main": [
        [
          {
            "node": "AI Agent5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model8": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "笔记自动补全": {
      "main": [
        [
          {
            "node": "AI Agent7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1eed45ddd9333e8c5f9a70a2fae0ffba743218818c24507da9d021fdaa9893e1"
  }
}