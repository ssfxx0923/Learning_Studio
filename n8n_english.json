{
  "nodes": [
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/audio.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2816,
        -1984
      ],
      "id": "a9dca6b2-becf-458b-9365-61a0b65196e8",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.fish.audio/v1/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "s1"
            },
            {
              "name": "Accept",
              "value": "audio/mpeg"
            },
            {
              "name": "Authorization",
              "value": "Bearer bc3c9c4104974d28bbd8ee0600d25fbd"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "= {{ $json.output.Body }}"
            },
            {
              "name": "format",
              "value": "mp3"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2400,
        -1984
      ],
      "id": "7dafd0a8-b286-46dd-b2e4-26951c503772",
      "name": "语音生成"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://open.bigmodel.cn/api/paas/v4/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 02c67b1b817747ec8cf94cce25bad339.rnRLhNg7slZOwT4K"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "cogView-4-250304"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output.cover }}"
            },
            {
              "name": "size",
              "value": "1792x1024"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2400,
        -2384
      ],
      "id": "ebea05c9-6dbc-4364-9e72-1c7ae450d759",
      "name": "图片生成"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.message }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=你是一个英语学习辅助助手。用户会输入若干英文单词，请写一篇约 100 词的有趣英文短文，兼顾流畅度和单词使用量。\n你只需要返回纯粹的json。格式，不要附带任何解释和说明。\njson格式如下:\n{\"Title\": \"California\", \"Body\": \"Your English essay related to the keyword\", \"Words\": [\"word1\", \"word2\", \"word3\"]}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1456,
        -2208
      ],
      "id": "c6ccc282-5d05-437a-bcb7-22d245527cc6",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "glm-4.5",
          "mode": "list",
          "cachedResultName": "glm-4.5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1456,
        -2000
      ],
      "id": "38aa053d-cf54-494c-89b1-ca31b1885f55",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "yK0fgk8FcJgoqsnQ",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\"Title\": \"California\", \"Body\": \"Your English essay related to the keyword\", \"Words\": [\"word1\", \"word2\", \"word3\"]}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1600,
        -2000
      ],
      "id": "c8c90dae-5305-4320-8818-de38f861e6b1",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://open.bigmodel.cn/api/paas/v4/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 02c67b1b817747ec8cf94cce25bad339.rnRLhNg7slZOwT4K"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "cogView-4-250304"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output.middle }}"
            },
            {
              "name": "size",
              "value": "1792x1024"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2432,
        -2624
      ],
      "id": "8fd71848-ca48-44ad-bd42-f2791ae77e35",
      "name": "图片生成1"
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2640,
        -2624
      ],
      "id": "6c7ec269-ce69-4949-a8e6-6d87ebc6ebbd",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2608,
        -2384
      ],
      "id": "b46c96eb-d264-4f73-a60a-c6d7ef840bbd",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/middle.png",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2848,
        -2624
      ],
      "id": "c1a72a89-bb43-4363-855c-a69446d81989",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/cover.png",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2832,
        -2384
      ],
      "id": "f8799bcb-ef73-471e-9145-a5ebb4150be5",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "content": "# 使用AI，实现单词到短文的生成。\n\n# 执行这个url会生成两张图片和一份音频，用于搭建阅读模板",
        "height": 1696,
        "width": 2720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -2960
      ],
      "typeVersion": 1,
      "id": "9fe8a62c-133a-441d-99ad-9eb80901c75a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "english/generate",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1184,
        -2208
      ],
      "id": "22fa1942-4992-4e1a-862e-bd81a39f454c",
      "name": "Webhook",
      "webhookId": "e155b53a-e6bc-4d80-a7ac-b4ec8d525119"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/root/Learning_Studio/public/data/english/artikel/{{ $('Webhook').item.json.body.request_id }}/content.json",
        "dataPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2832,
        -2176
      ],
      "id": "9f06fad2-a989-4591-ba11-6bbd91d22165",
      "name": "Read/Write Files from Disk3"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2400,
        -2176
      ],
      "id": "faac8117-101c-4890-97a1-f0355dbd7305",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "english/translate",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        960,
        -1168
      ],
      "id": "612b6bc4-e5a4-4b20-b097-cc56dadb5c41",
      "name": "Webhook_Translate",
      "webhookId": "6a373184-55f7-42fb-978d-dc92de20223f"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.word }}",
        "options": {
          "systemMessage": "你是一个专业的英语翻译助手。请将用户提供的英文文本翻译成简洁、准确的中文。只返回翻译结果，不要添加任何解释。"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1296,
        -1168
      ],
      "id": "42970817-2cf9-463b-9cde-aa670bc43a04",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1296,
        -976
      ],
      "id": "3020f424-27a6-4f0f-b764-fe8c79a3089c",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# 划词翻译",
        "height": 560,
        "width": 1616
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -1232
      ],
      "typeVersion": 1,
      "id": "6e38c96c-45af-4059-81a3-cb0c0eecc63d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "english/analyze",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        960,
        -496
      ],
      "id": "d9139036-bd4c-4b9a-940b-2e4f60001c23",
      "name": "Webhook_Analyze",
      "webhookId": "8f9e3d21-4c85-44ff-b256-9a8e7f8d6c3e"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.text }}",
        "options": {
          "systemMessage": "你是一个专业的英语教学助手。请分析用户提供的英文文本，包括：\n1. 语法结构分析\n2. 重点词汇解释\n3. 句子含义和用法\n4. 相关例句（如适用）\n请用简洁、易懂的中文回答，帮助学习者更好地理解这段文本。"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1312,
        -496
      ],
      "id": "3d17fd44-3a36-4670-903c-c05de5ebf194",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1312,
        -304
      ],
      "id": "3fe7f0db-3ce7-4ed5-87f0-167abc1327c7",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# 划词解析\n",
        "height": 560,
        "width": 1616
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -624
      ],
      "typeVersion": 1,
      "id": "c14cc862-c355-48c6-a833-c8426ce7f594",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=你是一个专业的ai绘图师，你的任务就是深入理解用户提供的短文。为其生专业的ai绘画提示词。对应一篇文章，你要描述两个图片。\n1.封面图(cover)：阅读整篇文章根据文章内容，描绘一幅紧扣文章主题的封面图。\n2.中间图(middle)：另外选择一个最有趣画面进行描述，生成一个中间配图。\n你需要返回严格的单行json。格式，不要附带任何解释和说明。json格式如下:\n{\"cover\": \"California\", \"middle\": \"California\"}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2000,
        -2544
      ],
      "id": "629292a8-a693-4903-9399-89c2c00069d7",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2000,
        -2336
      ],
      "id": "8c17f822-6391-4c1c-93c6-69e4696981ac",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"cover\": \"California\",\n\t\"middle\": \"California\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2144,
        -2336
      ],
      "id": "31991a56-4688-4aca-bdab-7c184793968a",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.plan }}",
        "options": {
          "systemMessage": "你是一个专业的学习规划和时间管理助手。用户会提供一个学习计划的JSON数据，包含任务列表、优先级、截止日期等信息。\n\n请仔细分析这个计划并给出具体的优化建议，包括：\n1. 任务优先级是否合理\n2. 时间安排是否科学\n3. 任务分解是否合适\n4. 完成进度评估\n5. 具体的改进建议\n\n请用简洁、实用的中文回答，给出3-5条具体可行的建议。每条建议控制在50字以内。"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1376,
        32
      ],
      "id": "6293461b-b450-4a31-85af-2ccb707fbf8f",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1264,
        304
      ],
      "id": "084b3b12-45c5-4356-8045-5ddd5e8e90ba",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "Ja1oOqdJYdJ0EpPS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        1536,
        304
      ],
      "id": "e1ef2a88-cae0-4f75-b7df-9cd0313afd96",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "toolDescription": "计划创建助手",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "你是一个json助手，用户会想你描述他的计划，你的任务是根据用户的计划创建一个对应的json文件。请确保你的返回为纯粹的当行json格式，不要附带任何说明。\njson格式说明：\n{\"title\": \"The title of the plan or project, summarizing its main theme.\", \"description\": \"A brief description of the plan’s goal or purpose.\", \"priority\": \"The overall priority level of the plan (higher number means higher importance).\", \"tasks\": [{\"id\": \"A unique identifier for the task, used to distinguish it from others.\", \"title\": \"The title of the task, summarizing what needs to be done.\", \"priority\": \"The task's priority level (higher number means more important).\", \"completed\": \"Boolean value indicating whether the task is completed (true or false).\", \"dueDate\": \"The due date for the task, used for scheduling or reminders.\", \"createdAt\": \"The timestamp when the task was created.\", \"completedAt\": \"The timestamp when the task was completed; only present if completed.\"}], \"progress\": \"The overall progress percentage of the plan, usually based on completed tasks.\", \"dueDate\": \"The final deadline for the entire plan or project.\", \"createdAt\": \"The timestamp when the plan was created.\"}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1808,
        240
      ],
      "id": "a39f6152-34c1-48ed-9158-160ab6befbac",
      "name": "AI Agent Tool"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "glm-4.5",
          "mode": "list",
          "cachedResultName": "glm-4.5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1680,
        448
      ],
      "id": "73016485-7b54-4c75-8e44-aa330235cbeb",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "yK0fgk8FcJgoqsnQ",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1792,
        448
      ],
      "id": "6965ce6d-a2ce-4e9e-8705-daee3ce3ff5b",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\"title\": \"The title of the plan or project, summarizing its main theme.\", \"description\": \"A brief description of the plan’s goal or purpose.\", \"priority\": \"The overall priority level of the plan (higher number means higher importance).\", \"tasks\": [{\"id\": \"A unique identifier for the task, used to distinguish it from others.\", \"title\": \"The title of the task, summarizing what needs to be done.\", \"priority\": \"The task's priority level (higher number means more important).\", \"completed\": \"Boolean value indicating whether the task is completed (true or false).\", \"dueDate\": \"The due date for the task, used for scheduling or reminders.\", \"createdAt\": \"The timestamp when the task was created.\", \"completedAt\": \"The timestamp when the task was completed; only present if completed.\"}], \"progress\": \"The overall progress percentage of the plan, usually based on completed tasks.\", \"dueDate\": \"The final deadline for the entire plan or project.\", \"createdAt\": \"The timestamp when the plan was created.\"}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2016,
        448
      ],
      "id": "497cbd9b-4c5a-4e6d-ad86-d8af342b7c6a",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "content": "## 任务规划\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 704,
        "width": 2160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -48
      ],
      "typeVersion": 1,
      "id": "23a97bd3-526e-4d2a-9274-a661d447cdfb",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "plan/analyze",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        1040,
        32
      ],
      "id": "fc223477-57fc-41a1-a642-7047068cc5ca",
      "name": "Webhook_plan",
      "webhookId": "8a9e5f2c-1d3b-4e8a-9c7d-6f5e4d3c2b1a"
    }
  ],
  "connections": {
    "语音生成": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "图片生成": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "语音生成",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "图片生成1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook_Translate": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook_Analyze": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "图片生成1",
            "type": "main",
            "index": 0
          },
          {
            "node": "图片生成",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Tool",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Webhook_plan": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1eed45ddd9333e8c5f9a70a2fae0ffba743218818c24507da9d021fdaa9893e1"
  }
}